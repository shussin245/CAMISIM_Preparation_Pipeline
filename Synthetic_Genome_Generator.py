# -*- coding: utf-8 -*-
"""Sequence_Generator_P

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GTdpKd6kv4bRjEPJmT4Bm-Qy7HOJALZ4

Libraries
"""

import string
import random
import numpy as np
import math
import csv

"""Generating Reference Sequences"""

random.seed(100442971)
bases = "ACTG"
sequences = []

for i in range(0, 1000):

  seq = ''.join(random.choice(bases) for j in range(10000))
  sequences.append(seq)
  #print(seq)

#Cannot print all sequences because it exceeds IOPub data rate
#print(sequences)

"""Creating Sequence Names"""

random.seed(100442971)
pct_ids = [50, 80, 90, 95, 96, 97, 98, 99, 99.5, 99.9]
n_strains = [0, 1, 2, 3, 4, 5, 10, 15, 20, 50]
depths = [3, 5, 10, 15, 20, 25, 50, 75, 100, 200]

pct_id_labels = [str(x) + "%ID" for x in pct_ids]
pct_id_dict = dict(zip(pct_ids, pct_id_labels))

n_strain_labels = [str(y) + "STR" for y in n_strains]
n_strain_dict = dict(zip(n_strains, n_strain_labels))

depth_labels = [str(z) + "DPT" for z in depths]
depth_dict = dict(zip(depths, depth_labels))

#print(pct_id_dict)
#print(n_strain_dict)
#print(depth_dict)

str_names = []
vec_names = []

for a in pct_ids:
  for b in n_strains:
    for c in depths:

      vec_name_list = [a,b,c]
      vec_name = np.array(vec_name_list)
      str_name = f"{pct_id_dict[a]}_{n_strain_dict[b]}_{depth_dict[c]}"
      str_names.append(str_name)
      vec_names.append(vec_name)
      #print(str_name)
      #print(vec_name)

#print(len(sequences))
#print(len(names))
#print(names[0][0][0])
#names_set = set(names)
#print(len(names_set))

"""Creating FASTA File with References"""

random.seed(100442971)
references_dict = dict(zip(str_names, sequences))

fasta_file_1 = open("references.fasta", "w")

for k in range(len(references_dict)):
    fasta_file_1.write(">" + str_names[k] + "\n" +sequences[k] + "\n")

fasta_file_1.close()

"""Generating Additional Strains

1. Create a for-loop that goes through each of the names in the names list
2. Obtain the # of strains from each name
3. For each name, the number of additional strains will be generated and will be numberered according to the strain number
4. Each strain will be at the same %id, but the # of same bases should be changed accordingly (a lower %id will yield more bases to be changed)
5. **Does the position of the bases that are changed must be the same for each set of additional strains?**
6. New names and strains will be added to their own lists
7. All the additional strains will be added to another .fasta file
"""

random.seed(100442971)
total_add_strains = 0
strains = []
strain_names = []

for n in range(0, 1000):
  name = vec_names[n]
  #print(name)
  num_add_strains = vec_names[n][1]
  #print(num_add_strains)
  total_add_strains += num_add_strains
  bases_change = (1-((vec_names[n][0])/100))*10000
  bases_change = round(bases_change)
  #print(bases_change)

  sequence = sequences[n]
  #print(sequence)
  seq_list = list(sequences[n])

  for o in range(0, int(num_add_strains)):
    for m in range(0, int(bases_change)):
      ind = random.randrange(10000)
      ba = bases
      ba = ba.replace(seq_list[ind], "")
      seq_list[ind] = random.choice(ba)

    new_strain = "".join(seq_list)
    #print(new_strain)
    strains.append(new_strain)

    strain_name = f"{str_names[n]}_S{o}"
    #print(strain_name)
    strain_names.append(strain_name)

#print(total_add_strains)
#print(strains)
#print(len(strains))
#print(len(strain_names))
#strain_set = set(strains)
#print(len(strain_set))
#print(random.choices(strains, k=3))

"""Creating FASTA File with Strains"""

random.seed(100442971)
strains_dict = dict(zip(strain_names, strains))

print(len(strains_dict))

fasta_file_2 = open("strains.fasta", "w")

for k in range(len(strains_dict)):
    fasta_file_2.write(">" + strain_names[k] + "\n" +strains[k] + "\n")

fasta_file_2.close()
